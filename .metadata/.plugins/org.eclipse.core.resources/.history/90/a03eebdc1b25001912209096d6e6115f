package com.cg.banking.services;

import java.util.List;

import com.cg.banking.beans.Account;
import com.cg.banking.exceptions.AccountBlockedException;
import com.cg.banking.exceptions.AccountNotFoundException;
import com.cg.banking.exceptions.BankingServicesDownException;

public interface BankingServices {
	Account openAccount(String accountType, float initBalance) throws InvalidAmountException,InvalidAccountTypeException,BankingServicesDownException;
	float depositAmount(long accountNo,float amount) throws AccountNotFoundException,BankingServicesDownException,AccountBlockedException;
	float withdrawAmount(long accountNo,float amount,int pinNumber) throws InsufficientAmountException,AccountNotFoundException,InvalidPinNumberException,BankingServicesDownException,AccountBlockedException;
	boolean fundTransfer(long accountNoTo,long accountNoFrom,float transferAmount,int pinNumber) throws InsufficientAmountException,AccountNotFoundException,InvalidPinNumberException,BankingServicesDownException,AccountBlockedException;
	Account getAccountDetails(long accountNo) throws AccountNotFoundException,BankingServicesDownException;
	List <Account> getAllAccountDetails() throws BankingServicesDownException;
	List <Transcation> getAccountAllTransaction(long accountNo) throws BankingServicesDownException,AccountNotFoundException;
	public string accountStatus(long accountNo) throws BankingServicesDownException,AccountNotFoundException,AccountBlockedException;
	

}
