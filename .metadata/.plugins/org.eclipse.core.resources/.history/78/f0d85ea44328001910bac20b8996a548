package com.cg.banking.beans;

import java.util.List;

public class Account {
	private long accountNo;
	private String accName;
	private String address;
	private double mobileNo;
	private double emailId;
	private String nomineeName;
	private double panIdNo;
	private double voterIdNo;
	private String accountType,accountStatus;
	private float accountBalance;
	private List<Transaction> transactions;
	
	public Account() {}

	public Account(String accName, String address, double mobileNo, double emailId, String nomineeName, double panIdNo,
			double voterIdNo, String accountType) {
		super();
		this.accName = accName;
		this.address = address;
		this.mobileNo = mobileNo;
		this.emailId = emailId;
		this.nomineeName = nomineeName;
		this.panIdNo = panIdNo;
		this.voterIdNo = voterIdNo;
		this.accountType = accountType;
	}

	public Account(long accountNo, String accName, String address, double mobileNo, double emailId, String nomineeName,
			double panIdNo, double voterIdNo, String accountType, String accountStatus, float accountBalance,
			List<Transaction> transactions) {
		super();
		this.accountNo = accountNo;
		this.accName = accName;
		this.address = address;
		this.mobileNo = mobileNo;
		this.emailId = emailId;
		this.nomineeName = nomineeName;
		this.panIdNo = panIdNo;
		this.voterIdNo = voterIdNo;
		this.accountType = accountType;
		this.accountStatus = accountStatus;
		this.accountBalance = accountBalance;
		this.transactions = transactions;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((accName == null) ? 0 : accName.hashCode());
		result = prime * result + Float.floatToIntBits(accountBalance);
		result = prime * result + (int) (accountNo ^ (accountNo >>> 32));
		result = prime * result + ((accountStatus == null) ? 0 : accountStatus.hashCode());
		result = prime * result + ((accountType == null) ? 0 : accountType.hashCode());
		result = prime * result + ((address == null) ? 0 : address.hashCode());
		long temp;
		temp = Double.doubleToLongBits(emailId);
		result = prime * result + (int) (temp ^ (temp >>> 32));
		temp = Double.doubleToLongBits(mobileNo);
		result = prime * result + (int) (temp ^ (temp >>> 32));
		result = prime * result + ((nomineeName == null) ? 0 : nomineeName.hashCode());
		temp = Double.doubleToLongBits(panIdNo);
		result = prime * result + (int) (temp ^ (temp >>> 32));
		result = prime * result + ((transactions == null) ? 0 : transactions.hashCode());
		temp = Double.doubleToLongBits(voterIdNo);
		result = prime * result + (int) (temp ^ (temp >>> 32));
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Account other = (Account) obj;
		if (accName == null) {
			if (other.accName != null)
				return false;
		} else if (!accName.equals(other.accName))
			return false;
		if (Float.floatToIntBits(accountBalance) != Float.floatToIntBits(other.accountBalance))
			return false;
		if (accountNo != other.accountNo)
			return false;
		if (accountStatus == null) {
			if (other.accountStatus != null)
				return false;
		} else if (!accountStatus.equals(other.accountStatus))
			return false;
		if (accountType == null) {
			if (other.accountType != null)
				return false;
		} else if (!accountType.equals(other.accountType))
			return false;
		if (address == null) {
			if (other.address != null)
				return false;
		} else if (!address.equals(other.address))
			return false;
		if (Double.doubleToLongBits(emailId) != Double.doubleToLongBits(other.emailId))
			return false;
		if (Double.doubleToLongBits(mobileNo) != Double.doubleToLongBits(other.mobileNo))
			return false;
		if (nomineeName == null) {
			if (other.nomineeName != null)
				return false;
		} else if (!nomineeName.equals(other.nomineeName))
			return false;
		if (Double.doubleToLongBits(panIdNo) != Double.doubleToLongBits(other.panIdNo))
			return false;
		if (transactions == null) {
			if (other.transactions != null)
				return false;
		} else if (!transactions.equals(other.transactions))
			return false;
		if (Double.doubleToLongBits(voterIdNo) != Double.doubleToLongBits(other.voterIdNo))
			return false;
		return true;
	}

	public long getAccountNo() {
		return accountNo;
	}

	public void setAccountNo(long accountNo) {
		this.accountNo = accountNo;
	}

	public String getAccName() {
		return accName;
	}

	public void setAccName(String accName) {
		this.accName = accName;
	}

	public String getAddress() {
		return address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	public double getMobileNo() {
		return mobileNo;
	}

	public void setMobileNo(double mobileNo) {
		this.mobileNo = mobileNo;
	}

	public double getEmailId() {
		return emailId;
	}

	public void setEmailId(double emailId) {
		this.emailId = emailId;
	}

	public String getNomineeName() {
		return nomineeName;
	}

	public void setNomineeName(String nomineeName) {
		this.nomineeName = nomineeName;
	}

	public double getPanIdNo() {
		return panIdNo;
	}

	public void setPanIdNo(double panIdNo) {
		this.panIdNo = panIdNo;
	}

	public double getVoterIdNo() {
		return voterIdNo;
	}

	public void setVoterIdNo(double voterIdNo) {
		this.voterIdNo = voterIdNo;
	}

	public String getAccountType() {
		return accountType;
	}

	public void setAccountType(String accountType) {
		this.accountType = accountType;
	}

	public String getAccountStatus() {
		return accountStatus;
	}

	public void setAccountStatus(String accountStatus) {
		this.accountStatus = accountStatus;
	}

	public float getAccountBalance() {
		return accountBalance;
	}

	public void setAccountBalance(float accountBalance) {
		this.accountBalance = accountBalance;
	}

	public List<Transaction> getTransactions() {
		return transactions;
	}

	public void setTransactions(List<Transaction> transactions) {
		this.transactions = transactions;
	}

	@Override
	public String toString() {
		return "Account [accountNo=" + accountNo + ", accName=" + accName + ", address=" + address + ", mobileNo="
				+ mobileNo + ", emailId=" + emailId + ", nomineeName=" + nomineeName + ", panIdNo=" + panIdNo
				+ ", voterIdNo=" + voterIdNo + ", accountType=" + accountType + ", accountStatus=" + accountStatus
				+ ", accountBalance=" + accountBalance + ", transactions=" + transactions + "]";
	}
	
}
